#!/bin/bash

echo "Initiating test"

# Prepare test
blocks="tick signal_generator sum Z"
tmpfiles="tick.stdout tick.stderr signal_generator.stdout signal_generator.stderr sum.stdout sum.stderr Z.stdout Z.stderr result.log result.ok"
source configure.sh
./compileBlocks.sh "$blocks"
./initWorkspace.sh "$blocks"

# Configure block operation
cat <<EOF >$WORKSPACE/Z.conf
[Operation]
N=0

[Task]
Priority=50

EOF

# Run test
$BLOCKPATH/tick/tick -iroot1 -oroot2 Test/tick 1> tick.stdout 2> tick.stderr &
$BLOCKPATH/signal_generator/signal_generator -iroot2 -osignal0 Test/signal_generator 1> signal_generator.stdout 2> signal_generator.stderr &
$BLOCKPATH/sum/sum -isignal0,signal2 -osignal1 Test/sum 1> sum.stdout 2> sum.stderr &
$BLOCKPATH/Z/Z -isignal1 -osignal2 Test/Z 1> Z.stdout 2> Z.stderr &


sleep 2
killall tick
sleep 2

# Assemble result.log
rm -rf result.log
for block in $blocks
do
	tail -n1 $block.stdout >> result.log
	cat $block.stderr >> result.log
done

# Test if result.log is equal to result.ok
cat <<EOF >result.ok
      finalize_block: 	Successfully terminated
      finalize_block: 	Successfully terminated
W: read_input_queues: The "root2" queue has timed out! Exiting gracefully. (-ETIMEDOUT -110 Connection timed out)
          start_task: 	sum loop about to start
E: read_input_queues: The "signal2" queue has timed out on the first try! Cyclical dependency? (-ETIMEDOUT -110 Connection timed out)
          start_task: 	Z loop about to start
E: read_input_queues: The "signal1" queue has timed out on the first try! Cyclical dependency? (-ETIMEDOUT -110 Connection timed out)
EOF

diff result.ok result.log
result=$?

echo "***********************"
cat result.log
# Clean up
./cleanupWorkspace.sh "$tmpfiles"

echo "Test result is $result"

exit $result
